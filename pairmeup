#!/usr/bin/env bash

FIREWALL=10.1.1.1

function print_usage {
  cat <<EOF
Usage: -i <interface> -p <port>

<interface> is the network interface you are connected to the pair
network on

<port> is the port number you want to provide access to on your
machine. For example:

./pairmeup -i en0 -p 22

would redirect a random external port back to port 22 on your machine

EOF
}

while getopts ":i:p:h" opt; do
    case $opt in
	i)
	    INTERFACE=$OPTARG
	    ;;
	p)
	    PORT=$OPTARG
	    ;;
	h)
	    print_usage
	    exit 0
	    ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    print_usage
	    exit 1
	    ;;
	:)
	    echo "Option -$OPTARG requires an argument." >&2
	    exit 1
	    ;;
    esac
done

# fetch the current pf.conf
function fetch_pf {
    scp root@$FIREWALL:/etc/pf.conf .
}

# grab the ip address
function lookup_current_ip {
    IP=`ifconfig $INTERFACE | grep 'inet ' | awk '{ print $2 }'`
}

# get a random port number
function assign_external_port {
    EXTERNAL=`jot -r 1 2000 65000`
}

# write a firewall rule
function write_rule {
    echo "pass in on \$ext_if proto tcp from any to \$ext_if port $EXTERNAL rdr-to $IP port $PORT" >> pf.conf
}

if [ -z $INTERFACE ] || [ -z $PORT ]
then
    print_usage
    exit 1
fi

echo "Fetching pf.conf"
rm pf.conf
fetch_pf
lookup_current_ip
assign_external_port
write_rule
echo "Installing new ruleset"
scp pf.conf root@$FIREWALL:
ssh root@$FIREWALL 'cp /etc/pf.conf /etc/pf.conf.bak && pfctl -n -f pf.conf && mv pf.conf /etc/pf.conf && pfctl -f /etc/pf.conf'
rm pf.conf
echo "Setup complete. External port $EXTERNAL, local port $PORT on $IP"
